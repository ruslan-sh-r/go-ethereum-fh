name: Release

on:
  push:
    # Publish `polygon-v1.2.3` tags as releases.
    tags:
      - "[a-z0-9]+-v*"
      - "!**.docker"

jobs:
  build:
    name: Build Release
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-18.04, macos-11] # windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Binary for ${{matrix.os}}
        run: make geth

      - name: Upload Linux Build
        uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-18.04'
        with:
          name: linux
          path: ./build/bin/geth

      - name: Upload MacOS Build
        uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-11'
        with:
          name: macos
          path: ./build/bin/geth

  release:
    name: Release
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Set Env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v2


      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux
          path: ./linux

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: macos
          path: ./macos

      # - name: Download Artifacts
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: windows
      #     path: ./windows


      - name: Generate Change Log
        id: changelog
        run: |
          chmod 755 ./.github/generate_change_log.sh
          CHANGELOG=$(./.github/generate_change_log.sh ${{ env.RELEASE_VERSION}})

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false

      # Check downloaded files
      - run: ls

      - name: Upload Release Asset - Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/geth
          asset_name: geth_linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - MacOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/geth
          asset_name: geth_mac
          asset_content_type: application/octet-stream

      # - name: Upload Release Asset - Windows
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./windows/geth.exe
      #     asset_name: geth_windows.exe
      #     asset_content_type: application/octet-stream
